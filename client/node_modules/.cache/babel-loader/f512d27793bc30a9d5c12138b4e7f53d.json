{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/sign-up/sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport ErrorMessage from '../error-message/error-message.component'; // import './sign-up.styles.scss'\n\nimport { SignUpContainer } from './sign-up.styles';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    const {\n      signUpStart\n    } = this.props;\n\n    if (password !== confirmPassword) {\n      this.setState({\n        errorMessage: \"Passwords Don't Match!\"\n      });\n      return;\n    }\n\n    signUpStart(displayName, email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = this.state;\n  return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Do not have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: this.handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: this.handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: this.handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: this.handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), this.state.errorMessage ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"m4iu/BUGUajL0WA0glj9vuQOguI=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","ErrorMessage","SignUpContainer","connect","signUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","state","props","setState","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport ErrorMessage from '../error-message/error-message.component'\n\n// import './sign-up.styles.scss'\nimport { SignUpContainer } from './sign-up.styles';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = () => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    })\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSubmit = async event => {\n        event.preventDefault()\n        const { displayName, email, password, confirmPassword } = this.state\n        const { signUpStart } = this.props\n        if (password !== confirmPassword) {\n            this.setState({ errorMessage: \"Passwords Don't Match!\" });\n            return;\n        }\n        signUpStart(displayName, email, password)\n    }\n\n    const handleChange = event => {\n        const { name, value } = event.target\n        this.setState({[name]: value})\n    }\n\n    const {displayName, email, password, confirmPassword} = this.state\n    return (\n        <SignUpContainer>\n            <h2 className=\"title\">Do not have an account?</h2>\n            <span>Sign up with email and password</span>\n            <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={this.handleChange}\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={this.handleChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={this.handleChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={this.handleChange}\n                    label='Confirm Password'\n                    required\n                />\n                {this.state.errorMessage ? \n                    <ErrorMessage error={this.state.errorMessage}/> : null}\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </SignUpContainer >\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (displayName, email, password) => dispatch(signUpStart({displayName, email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}