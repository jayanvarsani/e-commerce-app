{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/header/header.component.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase/firebase.utils';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/crown.svg\";\nimport { connect } from 'react-redux';\nimport './header.styles.scss';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart/cart-dropdown.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\nimport { HeaderContainer, LogoContainer, OptionDiv, OptionLink, OptionsContainer } from './header.styles'; // if currentUser state is changed, re-render\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  currentUser,\n  hidden\n}) => /*#__PURE__*/_jsxDEV(HeaderContainer, {\n  children: [/*#__PURE__*/_jsxDEV(LogoContainer, {\n    to: \"/\",\n    children: /*#__PURE__*/_jsxDEV(Logo, {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(OptionsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(OptionLink, {\n      to: \"/shop\",\n      children: \"SHOP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionLink, {\n      to: \"/shop\",\n      children: \"CONTACT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), currentUser ? /*#__PURE__*/_jsxDEV(OptionDiv, {\n      onClick: () => auth.signOut(),\n      children: \"SIGN OUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(OptionLink, {\n      to: \"/signin\",\n      children: \"SIGN IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), hidden ? null : /*#__PURE__*/_jsxDEV(CartDropdown, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this); // catches the updated state and pulls out current user and pass it into Header\n\n\n_c = Header;\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden\n}); // connect returns a function which will connect the Header to mapStateToProps\n// allows the state to be destructured as props and then connect that to Header\n// allowing store to act as if we used default state management with state and props \n\nexport default connect(mapStateToProps)(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/header/header.component.jsx"],"names":["React","Link","auth","connect","CartIcon","CartDropdown","createStructuredSelector","selectCurrentUser","selectCartHidden","HeaderContainer","LogoContainer","OptionDiv","OptionLink","OptionsContainer","Header","currentUser","hidden","signOut","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAoB,+BAApB;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,sBAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,UAApD,EAAgEC,gBAAhE,QAAwF,iBAAxF,C,CAEA;;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,kBACb,QAAC,eAAD;AAAA,0BACE,QAAC,aAAD;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eAIE,QAAC,gBAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAOKD,WAAW,gBACZ,QAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAMb,IAAI,CAACe,OAAL,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,gBAKV,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZN,eAgBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAsBID,MAAM,GAAG,IAAH,gBAAU,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAtBpB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,C,CA2BA;;;KA3BMF,M;AA4BN,MAAMI,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CS,EAAAA,WAAW,EAAER,iBADkC;AAE/CS,EAAAA,MAAM,EAAER;AAFuC,CAAD,CAAhD,C,CAKA;AACA;AACA;;AACA,eAAeL,OAAO,CAACe,eAAD,CAAP,CAAyBJ,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport  {auth} from '../../firebase/firebase.utils'\nimport { ReactComponent as Logo } from '../../assets/icons/crown.svg';\nimport { connect } from 'react-redux'\nimport './header.styles.scss';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart/cart-dropdown.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\nimport { HeaderContainer, LogoContainer, OptionDiv, OptionLink, OptionsContainer } from './header.styles';\n\n// if currentUser state is changed, re-render\nconst Header = ({currentUser, hidden}) => (\n  <HeaderContainer>\n    <LogoContainer to='/'>\n      <Logo className='logo' />\n    </LogoContainer>\n    <OptionsContainer>\n      <OptionLink to='/shop'>\n        SHOP\n      </OptionLink>\n      <OptionLink to='/shop'>\n        CONTACT\n      </OptionLink>\n        {currentUser ? (\n        <OptionDiv onClick={() => auth.signOut()}>\n          SIGN OUT\n        </OptionDiv>\n        ) : (\n          <OptionLink to='/signin'>\n            SIGN IN\n          </OptionLink>\n        )}\n      <CartIcon/>\n    </OptionsContainer>\n    { hidden ? null : <CartDropdown />}\n  </HeaderContainer>\n);\n\n// catches the updated state and pulls out current user and pass it into Header\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden\n})\n\n// connect returns a function which will connect the Header to mapStateToProps\n// allows the state to be destructured as props and then connect that to Header\n// allowing store to act as if we used default state management with state and props \nexport default connect(mapStateToProps)(Header);"]},"metadata":{},"sourceType":"module"}