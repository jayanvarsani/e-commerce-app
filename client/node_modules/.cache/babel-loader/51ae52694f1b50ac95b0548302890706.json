{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, getCurrentUser, googleProvider } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWIthEmail);\n}\nexport function* signInWIthEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n} // --\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signUp);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","createUserProfileDocument","getCurrentUser","googleProvider","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","user","signInWithPopup","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWIthEmail","payload","email","password","signInWithEmailAndPassword","onSignOutStart","SIGN_OUT_START","signOut","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","onSignUpStart","signUp","displayName","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport {\n\tauth,\n\tcreateUserProfileDocument,\n\tgetCurrentUser,\n\tgoogleProvider,\n} from \"../../firebase/firebase.utils\";\nimport {\n\tsignInFailure,\n\tsignInSuccess,\n\tsignOutFailure,\n\tsignOutSuccess,\n\tsignUpFailure,\n\tsignUpSuccess,\n} from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(\n\t\t\tsignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n\t\t);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWIthEmail);\n}\n\nexport function* signInWIthEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onSignOutStart() {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* signOut() {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch (error) {\n\t\tyield put(signOutFailure(error));\n\t}\n}\n\nexport function* onCheckUserSession() {\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* isUserAuthenticated() {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) return;\n\t\tyield getSnapshotFromUserAuth(userAuth);\n\t} catch (error) {\n\t\tput(signInFailure(error));\n\t}\n}\n\n// --\n\nexport function* onSignUpStart() {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, signUp);\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n\ttry {\n\t\tconst { user } = yield auth.createUserWithEmailAndPassword(\n\t\t\temail,\n\t\t\tpassword\n\t\t);\n\t\tyield put(signUpSuccess({ user, additionalData: { displayName } }));\n\t} catch (error) {\n\t\tput(signUpFailure(error));\n\t}\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n\tyield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onSignUpSuccess() {\n\tyield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(onCheckUserSession),\n\t\tcall(onSignOutStart),\n\t\tcall(onSignUpStart),\n\t\tcall(onSignUpSuccess),\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}