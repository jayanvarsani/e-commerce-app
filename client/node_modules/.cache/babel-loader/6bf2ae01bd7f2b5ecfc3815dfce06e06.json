{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/cart/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './cart-dropdown.styles.scss';\nimport CartItem from '../cart-item/cart-item.component';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = ({\n  cartItems\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `cart-items ${cartItems.length ? '' : 'empty'}`,\n      children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 47\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-message\",\n        children: \"CART IS EMPTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => console.log('clicked'),\n      isDisabled: cartItems.length ? true : false,\n      children: \"CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default connect(mapStateToProps)(CartDropdown);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/cart/cart-dropdown.component.jsx"],"names":["React","CustomButton","CartItem","connect","selectCartItems","createStructuredSelector","CartDropdown","cartItems","length","map","cartItem","id","console","log","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,6BAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAClC,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,cAAaA,SAAS,CAACC,MAAV,GAAmB,EAAnB,GAAwB,OAAQ,EAA9D;AAAA,gBACKD,SAAS,CAACC,MAAV,GACGD,SAAS,CAACE,GAAV,CAAcC,QAAQ,iBAAI,QAAC,QAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cAA1B,CADH,gBAEK;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAA9B;AAAsD,MAAA,UAAU,EAAEN,SAAS,CAACC,MAAV,GAAmB,IAAnB,GAA0B,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD;;KAAMF,Y;AAcN,MAAMQ,eAAe,GAAGT,wBAAwB,CAAC;AAChDE,EAAAA,SAAS,EAAEH;AADqC,CAAD,CAAhD;AAIA,eAAeD,OAAO,CAACW,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import React from 'react'\nimport CustomButton from '../custom-button/custom-button.component';\nimport './cart-dropdown.styles.scss'\nimport CartItem from '../cart-item/cart-item.component';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\n\nconst CartDropdown = ({cartItems}) => {\n    return (\n        <div className='cart-dropdown'>\n            <div className={`cart-items ${cartItems.length ? '' : 'empty'}`}>\n                {cartItems.length ?\n                    cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem} />)\n                    : <span className=\"empty-message\">CART IS EMPTY</span>\n                }\n            </div>\n            <CustomButton onClick={ () => console.log('clicked')} isDisabled={cartItems.length ? true : false}>CHECKOUT</CustomButton>\n        </div>\n    );\n};\n\nconst mapStateToProps = createStructuredSelector({\n\tcartItems: selectCartItems,\n});\n\nexport default connect(mapStateToProps)(CartDropdown);"]},"metadata":{},"sourceType":"module"}