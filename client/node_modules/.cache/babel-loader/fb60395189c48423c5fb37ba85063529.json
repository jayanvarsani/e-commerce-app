{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport memoize from \"lodash.memoize\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null));\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/redux/shop/shop.selectors.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC9C,CAACE,UAAD,CAD8C,EAE7CE,IAAD,IAAUA,IAAI,CAACE,WAF+B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGP,cAAc,CACxD,CAACK,iBAAD,CADwD,EAEvDC,WAAD,IACCA,WAAW,GACRE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CADQ,GAER,EALoD,CAAlD;AAQP,OAAO,MAAMC,gBAAgB,GAAGX,OAAO,CAAEY,kBAAD,IACvCb,cAAc,CAAC,CAACK,iBAAD,CAAD,EAAuBC,WAAD,IACnCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADnC,CADwB,CAAhC;AAMP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACvD,CAACE,UAAD,CADuD,EAEtDE,IAAD,IAAUA,IAAI,CAACW,UAFwC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACtD,CAACE,UAAD,CADsD,EAErDE,IAAD,IAAU,CAAC,CAACA,IAAI,CAACE,WAFqC,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\nimport memoize from \"lodash.memoize\";\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n\t[selectShop],\n\t(shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n\t[selectCollections],\n\t(collections) =>\n\t\tcollections\n\t\t\t? Object.keys(collections).map((key) => collections[key])\n\t\t\t: []\n);\n\nexport const selectCollection = memoize((collectionUrlParam) =>\n\tcreateSelector([selectCollections], (collections) =>\n\t\tcollections ? collections[collectionUrlParam] : null\n\t)\n);\n\nexport const selectIsCollectionFetching = createSelector(\n\t[selectShop],\n\t(shop) => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n\t[selectShop],\n\t(shop) => !!shop.collections\n);\n"]},"metadata":{},"sourceType":"module"}