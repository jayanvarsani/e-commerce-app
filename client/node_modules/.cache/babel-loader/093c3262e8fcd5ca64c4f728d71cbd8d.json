{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = collectionsMap => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/redux/shop/shop.actions..js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC3DH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADqC;AAE3DC,EAAAA,OAAO,EAAEF;AAFkD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACzDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADmC;AAEzDH,EAAAA,OAAO,EAAEE;AAFgD,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAIN,cAAD,IAAoB;AAC7D,SAAQO,QAAD,IAAc;AACpB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,YAAMZ,cAAc,GACnBL,+BAA+B,CAACiB,QAAD,CADhC;AAEAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,KANF,EAOEa,KAPF,CAOSC,KAAD,IAAWP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAP3B;AAQA,GAXD;AAYA,CAbM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n\tpayload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = (collectionsMap) => {\n\treturn (dispatch) => {\n\t\tconst collectionRef = firestore.collection(\"collections\");\n\t\tdispatch(fetchCollectionsStart());\n\t\tcollectionRef\n\t\t\t.get()\n\t\t\t.then((snapshot) => {\n\t\t\t\tconst collectionsMap =\n\t\t\t\t\tconvertCollectionsSnapshotToMap(snapshot);\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t\t})\n\t\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}