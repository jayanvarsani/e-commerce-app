{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyBqpNvOhIiBKLsMEMiIKdRgtyPchLGI9D4\",\n  authDomain: \"e-commerce-db-d4bf7.firebaseapp.com\",\n  projectId: \"e-commerce-db-d4bf7\",\n  storageBucket: \"e-commerce-db-d4bf7.appspot.com\",\n  messagingSenderId: \"225748228983\",\n  appId: \"1:225748228983:web:ee728bb6c1aea01aae5f72\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocs = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const processedSnapshot = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return processedSnapshot.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport default firebase;","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","e","console","log","message","addCollectionAndDocs","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","processedSnapshot","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n\tapiKey: \"AIzaSyBqpNvOhIiBKLsMEMiIKdRgtyPchLGI9D4\",\n\tauthDomain: \"e-commerce-db-d4bf7.firebaseapp.com\",\n\tprojectId: \"e-commerce-db-d4bf7\",\n\tstorageBucket: \"e-commerce-db-d4bf7.appspot.com\",\n\tmessagingSenderId: \"225748228983\",\n\tappId: \"1:225748228983:web:ee728bb6c1aea01aae5f72\",\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\tif (!userAuth) return;\n\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n\tconst snapShot = await userRef.get();\n\n\tif (!snapShot.exists) {\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\t\ttry {\n\t\t\tawait userRef.set({\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additionalData,\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.log(e.message);\n\t\t}\n\t}\n\treturn userRef;\n};\n\nexport const addCollectionAndDocs = async (collectionKey, objectsToAdd) => {\n\tconst collectionRef = firestore.collection(collectionKey);\n\tconst batch = firestore.batch();\n\tobjectsToAdd.forEach((obj) => {\n\t\tconst newDocRef = collectionRef.doc();\n\t\tbatch.set(newDocRef, obj);\n\t});\n\n\treturn await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n\tconst processedSnapshot = collections.docs.map((doc) => {\n\t\tconst { title, items } = doc.data();\n\n\t\treturn {\n\t\t\trouteName: encodeURI(title.toLowerCase()),\n\t\t\tid: doc.id,\n\t\t\ttitle,\n\t\t\titems,\n\t\t};\n\t});\n\treturn processedSnapshot.reduce((accumulator, collection) => {\n\t\taccumulator[collection.title.toLowerCase()] = collection;\n\t\treturn accumulator;\n\t}, {});\n};\n\nexport const getCurrentUser = () => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst unsubscribe = auth.onAuthStateChanged((userAuth) => {\n\t\t\tunsubscribe();\n\t\t\tresolve(userAuth);\n\t\t}, reject);\n\t});\n};\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}