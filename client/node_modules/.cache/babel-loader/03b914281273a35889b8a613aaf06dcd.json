{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/Desktop/Udemy React/e-commerce-app/src/App.js\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { HomePage } from \"./pages/home-page/home-page.component.jsx\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInRegisterPage from \"./pages/sign-in-register/sign-in-register.component\";\nimport { auth } from \"./firebase/firebase.utils\";\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signIn\",\n          component: SignInRegisterPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this);\n  }\n\n} // returns object containing props\n// contains setCurrentUser function which dispatches the action object\n// action object dispatched/fired to every reducer\n// dispatch parameter received is the function in order to dispatch action\n// we later use and invoke dispatch to act as setState()\n\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); // dispatch the initial payload as null\n// mapDispatchToProps forwarded to the component as props for use in the component\n// so we can use our custom setCurrentUser function in our component via a prop\n\n\nexport default connect(null, mapDispatchToProps)(App); // by default, components receive dispatch as a prop\n// connect allows us to create functions that do the dispatch for us\n// so we do not need to explicitly and directly call dispatch()\n// we do so through the alias of a function accessed via a prop\n// if you dont pass second argument into connect, component recieves dispatch by default\n// used when explicitly dispatching through the component directly invoking dispatch()\n// if you provide a mapDispatchToProps, connected component no longer recieves dispatch as a prop\n// it knows to instead pass mapDispatchToProps as this will contain the dispatch functions","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/App.js"],"names":["React","Route","Switch","HomePage","ShopPage","Header","SignInRegisterPage","auth","createUserProfileDocument","connect","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,SAASC,QAAT,QAAyB,2CAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,kBAAP,MAA+B,qDAA/B;AACA,SAASC,IAAT,QAAqB,2BAArB;AACA,SAASC,yBAAT,QAA0C,2BAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,2BAA/B;;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCC,mBADiC,GACX,IADW;AAAA;;AAEjCC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEJ,MAAAA;AAAF,QAAqB,KAAKK,KAAhC;AACA,SAAKF,mBAAL,GAA2BN,IAAI,CAACS,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AACtE,UAAIA,QAAJ,EAAc;AACb,cAAMC,OAAO,GAAG,MAAMV,yBAAyB,CAACS,QAAD,CAA/C;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAoBC,QAAD,IAAc;AAChCV,UAAAA,cAAc,CAAC;AACdW,YAAAA,EAAE,EAAED,QAAQ,CAACC,EADC;AAEd,eAAGD,QAAQ,CAACE,IAAT;AAFW,WAAD,CAAd;AAIA,SALD;AAMA;;AACDZ,MAAAA,cAAc,CAACO,QAAD,CAAd;AACA,KAX0B,CAA3B;AAYA;;AAEDM,EAAAA,oBAAoB,GAAG;AACtB,SAAKV,mBAAL;AACA;;AAEDW,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,MAAD;AAAA,gCACC,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAErB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AAjCgC,C,CAoClC;AACA;AACA;AACA;AACA;;;AACA,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACzChB,EAAAA,cAAc,EAAGiB,IAAD,IAAUD,QAAQ,CAAChB,cAAc,CAACiB,IAAD,CAAf;AADO,CAAf,CAA3B,C,CAIA;AACA;AACA;;;AACA,eAAelB,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCd,GAAlC,CAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { HomePage } from \"./pages/home-page/home-page.component.jsx\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInRegisterPage from \"./pages/sign-in-register/sign-in-register.component\";\nimport { auth } from \"./firebase/firebase.utils\";\nimport { createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\n\nclass App extends React.Component {\n\tunsubscribeFromAuth = null;\n\tcomponentDidMount() {\n\t\tconst { setCurrentUser } = this.props;\n\t\tthis.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n\t\t\tif (userAuth) {\n\t\t\t\tconst userRef = await createUserProfileDocument(userAuth);\n\t\t\t\tuserRef.onSnapshot((snapShot) => {\n\t\t\t\t\tsetCurrentUser({\n\t\t\t\t\t\tid: snapShot.id,\n\t\t\t\t\t\t...snapShot.data(),\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetCurrentUser(userAuth);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unsubscribeFromAuth();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t\t<Route path=\"/shop\" component={ShopPage} />\n\t\t\t\t\t<Route path=\"/signIn\" component={SignInRegisterPage} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// returns object containing props\n// contains setCurrentUser function which dispatches the action object\n// action object dispatched/fired to every reducer\n// dispatch parameter received is the function in order to dispatch action\n// we later use and invoke dispatch to act as setState()\nconst mapDispatchToProps = (dispatch) => ({\n\tsetCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\n// dispatch the initial payload as null\n// mapDispatchToProps forwarded to the component as props for use in the component\n// so we can use our custom setCurrentUser function in our component via a prop\nexport default connect(null, mapDispatchToProps)(App);\n\n// by default, components receive dispatch as a prop\n// connect allows us to create functions that do the dispatch for us\n// so we do not need to explicitly and directly call dispatch()\n// we do so through the alias of a function accessed via a prop\n\n// if you dont pass second argument into connect, component recieves dispatch by default\n// used when explicitly dispatching through the component directly invoking dispatch()\n\n// if you provide a mapDispatchToProps, connected component no longer recieves dispatch as a prop\n// it knows to instead pass mapDispatchToProps as this will contain the dispatch functions\n"]},"metadata":{},"sourceType":"module"}