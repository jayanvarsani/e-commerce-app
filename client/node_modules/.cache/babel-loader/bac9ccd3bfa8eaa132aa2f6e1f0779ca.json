{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/Desktop/Udemy React/e-commerce-app/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions.';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionsPageWithSpinner;\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","connect","WithSpinner","createStructuredSelector","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,iCAA3C;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACJ,mBAAD,CAAlD;KAAMO,8B;AACN,MAAMC,0BAA0B,GAAGJ,WAAW,CAACH,cAAD,CAA9C;MAAMO,0B;;AAEN,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAC7BY,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AACAT,IAAAA,0BAA0B;AAC7B;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGJ,KAAD,iBAAW,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,oBAA3C;AAAA,aAAqEH;AAArE;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGJ,KAAD,iBAAW,QAAC,0BAAD;AAA4B,UAAA,SAAS,EAAEG,oBAAvC;AAAA,aAAiEH;AAAjE;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAd4B;;AAiBjC,MAAMK,eAAe,GAAGX,wBAAwB,CAAC;AAC7CS,EAAAA,oBAAoB,EAAER;AADuB,CAAD,CAAhD;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeC,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCR,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions.';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends Component {\n    componentDidMount() {\n        const { fetchCollectionsStartAsync } = this.props\n        fetchCollectionsStartAsync()\n    }\n\n    render() {\n        const { match, isCollectionFetching } = this.props\n        return (\n            <div className=\"shop-page\" >\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props}/>} />\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionsPageWithSpinner isLoading={isCollectionFetching} {...props}/>} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}