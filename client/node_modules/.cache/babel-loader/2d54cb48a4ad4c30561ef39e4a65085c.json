{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/header/header.component.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase/firebase.utils';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/crown.svg\";\nimport { connect } from 'react-redux';\nimport './header.styles.scss';\nimport CartIcon from '../cart-icon/cart-icon.component'; // if currentUser state is changed, re-render\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  currentUser\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"header\",\n  children: [/*#__PURE__*/_jsxDEV(Link, {\n    className: \"logo-container\",\n    to: \"/\",\n    children: /*#__PURE__*/_jsxDEV(Logo, {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"option\",\n      to: \"/shop\",\n      children: \"SHOP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"option\",\n      to: \"/shop\",\n      children: \"CONTACT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option\",\n      onClick: () => auth.signOut(),\n      children: \"SIGN OUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      className: \"option\",\n      to: \"/signin\",\n      children: \"SIGN IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"option\",\n      to: \"/cart\",\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this); // catches the updated state and pulls out current user and pass it into Header\n\n\n_c = Header;\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n}); // connect returns a function which will connect the Header to mapStateToProps\n// allows the state to be destructured as props and then connect that to Header\n// allowing store to act as if we used default state management with state and props \n\n\nexport default connect(mapStateToProps)(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/header/header.component.jsx"],"names":["React","Link","auth","connect","CartIcon","Header","currentUser","signOut","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAoB,+BAApB;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,sBAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB,C,CAEA;;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,kBACb;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA,0BACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,EAAE,EAAC,GAApC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAOKA,WAAW,gBACV;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAE,MAAMJ,IAAI,CAACK,OAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAGV,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVN,eAYE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,EAAE,EAAC,OAA5B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,C,CAwBA;;;KAxBMF,M;;AAyBN,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,WAAW,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AADU,CAAZ,CAAxB,C,CAIA;AACA;AACA;;;AACA,eAAeH,OAAO,CAACK,eAAD,CAAP,CAAyBH,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport  {auth} from '../../firebase/firebase.utils'\nimport { ReactComponent as Logo } from '../../assets/icons/crown.svg';\nimport { connect } from 'react-redux'\nimport './header.styles.scss';\nimport CartIcon from '../cart-icon/cart-icon.component';\n\n// if currentUser state is changed, re-render\nconst Header = ({currentUser}) => (\n  <div className='header'>\n    <Link className='logo-container' to='/'>\n      <Logo className='logo' />\n    </Link>\n    <div className='options'>\n      <Link className='option' to='/shop'>\n        SHOP\n      </Link>\n      <Link className='option' to='/shop'>\n        CONTACT\n      </Link>\n        {currentUser ?\n          <div className=\"option\" onClick={() => auth.signOut()}>SIGN OUT</div>\n          :\n          <Link className=\"option\" to='/signin'>SIGN IN</Link>\n      }\n      <Link className=\"option\" to='/cart'>\n        <CartIcon/>\n      </Link>\n    </div>\n  </div>\n);\n\n// catches the updated state and pulls out current user and pass it into Header\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser\n})\n\n// connect returns a function which will connect the Header to mapStateToProps\n// allows the state to be destructured as props and then connect that to Header\n// allowing store to act as if we used default state management with state and props \nexport default connect(mapStateToProps)(Header);"]},"metadata":{},"sourceType":"module"}