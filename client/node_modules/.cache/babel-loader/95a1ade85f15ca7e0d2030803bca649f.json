{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport { memoize } from \"lodash.memoize\";\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n};\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollection = collectionUrlParam => {\n  createSelector([selectCollections], collections => {\n    console.log(collections);\n    return collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]);\n  });\n};","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/redux/shop/shop.selectors.js"],"names":["createSelector","memoize","COLLECTION_ID_MAP","hats","sneakers","jackets","womens","mens","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam","console","log","find","collection","id"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,MAAMC,iBAAiB,GAAG;AACzBC,EAAAA,IAAI,EAAE,CADmB;AAEzBC,EAAAA,QAAQ,EAAE,CAFe;AAGzBC,EAAAA,OAAO,EAAE,CAHgB;AAIzBC,EAAAA,MAAM,EAAE,CAJiB;AAKzBC,EAAAA,IAAI,EAAE;AALmB,CAA1B;;AAQA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGX,cAAc,CAC9C,CAACQ,UAAD,CAD8C,EAE7CE,IAAD,IAAUA,IAAI,CAACE,WAF+B,CAAxC;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAAwB;AACvDd,EAAAA,cAAc,CAAC,CAACW,iBAAD,CAAD,EAAuBC,WAAD,IAAiB;AACpDG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,WAAOA,WAAW,CAACK,IAAZ,CACLC,UAAD,IACCA,UAAU,CAACC,EAAX,KAAkBjB,iBAAiB,CAACY,kBAAD,CAF9B,CAAP;AAIA,GANa,CAAd;AAOA,CARM","sourcesContent":["import { createSelector } from \"reselect\";\nimport { memoize } from \"lodash.memoize\";\n\nconst COLLECTION_ID_MAP = {\n\thats: 1,\n\tsneakers: 2,\n\tjackets: 3,\n\twomens: 4,\n\tmens: 5,\n};\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n\t[selectShop],\n\t(shop) => shop.collections\n);\n\nexport const selectCollection = (collectionUrlParam) => {\n\tcreateSelector([selectCollections], (collections) => {\n\t\tconsole.log(collections);\n\t\treturn collections.find(\n\t\t\t(collection) =>\n\t\t\t\tcollection.id === COLLECTION_ID_MAP[collectionUrlParam]\n\t\t);\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}