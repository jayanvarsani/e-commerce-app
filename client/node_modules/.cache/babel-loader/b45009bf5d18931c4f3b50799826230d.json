{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react'; // import './sign-in.styles.scss'\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport ErrorMessage from '../error-message/error-message.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { ButtonsContainer, SignInContainer } from './sign-in.styles';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: '',\n          errorMessage: ''\n        });\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Already have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), this.state.errorMessage ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          error: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: signInWithGoogle,\n            isGoogle: true,\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","ErrorMessage","auth","signInWithGoogle","ButtonsContainer","SignInContainer","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","signInWithEmailAndPassword","setState","errorMessage","error","console","log","message","handleChange","value","name","target","render","mapDispatchToProps","dispatch","connect"],"mappings":"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","sourcesContent":["import React from 'react';\n// import './sign-in.styles.scss'\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport ErrorMessage from '../error-message/error-message.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { ButtonsContainer, SignInContainer } from './sign-in.styles';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: '',\n            password: '',\n            errorMessage: ''\n        }\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        const { email, password } = this.state\n        try {\n            await auth.signInWithEmailAndPassword(email, password)\n            this.setState({email: '', password: '', errorMessage: ''})\n        }\n        catch (error) {\n            console.log(error);\n            this.setState({errorMessage: error.message})\n        }\n    }\n\n    handleChange = e => {\n        e.preventDefault()\n        const {value, name} = e.target\n        this.setState({[name]: value})\n    }\n\n    render() {\n        return (\n            <SignInContainer>\n                <h2 className='title'>Already have an account?</h2>\n                <span>Sign in with email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        name='email'\n                        type=\"email\"\n                        value={this.state.email}\n                        handleChange={this.handleChange}\n                        label=\"Email\"\n                        required/>\n                    <FormInput\n                        name='password'\n                        type=\"password\"\n                        value={this.state.password}\n                        handleChange={this.handleChange}\n                        label=\"Password\"\n                        required />\n                    {this.state.errorMessage ? \n                        <ErrorMessage error={this.state.errorMessage}/> : null}\n                    <ButtonsContainer>\n                        <CustomButton type=\"submit\">Sign In</CustomButton>\n                        <CustomButton onClick={signInWithGoogle} isGoogle>Sign In With Google</CustomButton>\n                    </ButtonsContainer>\n                </form>\n            </SignInContainer>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}