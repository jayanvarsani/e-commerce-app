{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions.\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/redux/shop/shop.sagas.js"],"names":["ShopActionTypes","call","put","takeLatest","firestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAIA,SACCC,uBADD,EAECC,uBAFD,QAGO,iBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,MAAI;AACH,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAChCI,+BADgC,EAEhCM,QAFgC,CAAjC;AAIA,UAAMT,GAAG,CAACK,uBAAuB,CAACM,cAAD,CAAxB,CAAT;AACA,GARD,CAQE,OAAOC,KAAP,EAAc;AACf,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMb,UAAU,CACfH,eAAe,CAACiB,uBADD,EAEfT,qBAFe,CAAhB;AAIA","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n\tfetchCollectionsFailure,\n\tfetchCollectionsSuccess,\n} from \"./shop.actions.\";\n\nexport function* fetchCollectionsAsync() {\n\ttry {\n\t\tconst collectionRef = firestore.collection(\"collections\");\n\t\tconst snapshot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(\n\t\t\tconvertCollectionsSnapshotToMap,\n\t\t\tsnapshot\n\t\t);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\t} catch (error) {\n\t\tyield put(fetchCollectionsFailure(error.message));\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeLatest(\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\n\t\tfetchCollectionsAsync\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}