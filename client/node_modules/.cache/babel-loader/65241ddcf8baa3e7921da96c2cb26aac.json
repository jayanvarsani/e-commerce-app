{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/Desktop/Udemy React/e-commerce-app/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions.';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionPage);\n_c = CollectionsOverviewWithSpinner;\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","connect","WithSpinner","CollectionsOverviewWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,cAAD,CAAlD;KAAMM,8B;;AAEN,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BW,KAD6B,GACrB;AACJC,MAAAA,OAAO,EAAE;AADL,KADqB;AAAA,SAK7BC,uBAL6B,GAKH,IALG;AAAA;;AAO7BC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACR,MAAAA;AAAD,QAAsB,KAAKS,KAAjC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJ8B,CAA/B;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEtB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEqB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAErB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAzB4B;;AA4BjC,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,iBAAiB,EAAEc,cAAc,IAAIM,QAAQ,CAACpB,iBAAiB,CAACc,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAeb,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions.';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends Component {\n    state = {\n        loading: true\n    }\n\n    unsubscribeFromSnapshot = null\n\n    componentDidMount() {\n        const {updateCollections} = this.props\n        const collectionRef = firestore.collection('collections')\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            updateCollections(collectionsMap);\n            this.setState({ loading: false })\n        })\n    }\n\n    render() {\n        const {match} = this.props\n        return (\n            <div className=\"shop-page\" >\n                <Route exact path={`${match.path}`} component={CollectionsOverview} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}