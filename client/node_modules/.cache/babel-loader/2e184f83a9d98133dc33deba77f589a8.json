{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = collectionsMap => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jayan/Desktop/Udemy React/e-commerce-app/src/redux/shop/shop.actions..js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","collectionsMap","dispatch","collectionRef","collection","get","then","snapshot","updateCollections","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAIC,cAAD,IAAoB;AAC7D,SAAQC,QAAD,IAAc;AACpB,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACL,qBAAqB,EAAtB,CAAR;AACAM,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACtC,YAAMN,cAAc,GAAGL,+BAA+B,CAACW,QAAD,CAAtD;AACAC,MAAAA,iBAAiB,CAACP,cAAD,CAAjB;AACA,WAAKQ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAJD;AAKA,GARD;AASA,CAVM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = (collectionsMap) => {\n\treturn (dispatch) => {\n\t\tconst collectionRef = firestore.collection(\"collections\");\n\t\tdispatch(fetchCollectionsStart());\n\t\tcollectionRef.get().then((snapshot) => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tupdateCollections(collectionsMap);\n\t\t\tthis.setState({ loading: false });\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}